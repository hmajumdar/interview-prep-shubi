//Build Heap MIN heap
var size = 0; var arr = new Array(10);
var insertElement = function(el) {
  if(size<arr.length) {
      arr[size] = el;
      heapifyUp();
      size++
  } else {
    copyArr = arr;
    arr = new Array(20);
    for (var i=0;i<copyArr.length;i++) {
      arr[i]=copyArr[i];
    }
    arr[size] = el;
    heapifyUp();
    size++;
  }
  
}

var heapifyUp = function() {
  //if parent > child or child <parentthen swap
  var i = size;

  if(arr[(i-2)/2]!==undefined) {
      if (arr[i] < arr[(i-2)/2]) {
        swap(arr,i,(i-2)/2);
      }
   
  } else if(arr[(i-1)/2]!==undefined) {
      if (arr[i] < arr[(i-1)/2]) {
        swap(arr,i,(i-1)/2);
      }
  }
  if(arr[0]>arr[1]) {
    swap(arr,0,1);
  }
  console.log(arr)
};

var swap = function(arr,i,j) {
  var temp = arr[i];
  arr[i] = arr[j];
  arr[j] = temp;
};

var removeMin = function() {
  var temp = arr[0]
  //console.log("size"+size, arr[size])
  arr[0] = arr[size-1];
  arr[size-1] = null;
  heapifyDown();
  console.log("removed element",temp)
  console.log(arr)
};

var heapifyDown = function() {
  var j = 0;
  if (arr[2*j+1] !==undefined) {
    if(arr[j] > arr[2*j+1]) {
      swap(arr,j,2*j+1);
    } 
  } else if(arr[2*j+2] !==undefined) {
    if(arr[j] > arr[2*j+2]) {
    swap(arr,j,2*j+2);
    }
  }
};


insertElement(6);
insertElement(2);
insertElement(1);
insertElement(20)
insertElement(7)
insertElement(10)
insertElement(3)

removeMin();
